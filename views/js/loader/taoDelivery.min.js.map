{"version":3,"mappings":"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","names":["define","logger","accessibilityLaunchKeyCodes","displayPermanentMessage","level","feedback","timeout","popup","getLTIErrorParameters","searchParams","params","start","parameters","deliveryStarted","runDelivery","_","loadingBar","window","supportRTL","$","config","ltiErrorMsg","ltiErrorLog","e","launchDelivery","router","buffer","helper","stack1","escapeExpression","helpers","data","$dialog","$body","d","dElem","fs","changeInterval","isSupported","requestFullscreen","fullscreenchange","i","fullScreen","awaitFsChange","event","clearInterval","handleUserInput","triggerResize","frame","frameWindow","frame$","$win","init","document","modal","fsSupported","launchButton","width","animate","disableClosing","startClosed","$frameContainer","$frame","forceRepaint","$headerHeight","$footerHeight","sel","logoutEvent","serviceApi","onExit","on","setTimeout","dialogAlert","off","resizeMainFrame"],"sources":["../controller/DeliveryServer/index.js","../controller/routes.js","tpl!taoDelivery/tpl/fullscreen-modal-feedback","../controller/runtime/service/fullScreen.js","../controller/runtime/service/deliveryExecution.js","module-create.js"],"sourcesContent":["/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n *\n */\n\n/**\n * The DeliveryServer/index controller.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoDelivery/controller/DeliveryServer/index',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'core/router',\n    'ui/feedback',\n    'core/logger',\n    'layout/loading-bar',\n    'context',\n    'util/locale',\n    'url-polyfill'\n], function($, _, __, module, router, feedback, loggerFactory, loadingBar, context, locale){\n    'use strict';\n\n    const logger = loggerFactory('deliveryServer');\n\n    const accessibilityLaunchKeyCodes = [13, 32];  // \"enter\" or \"space\" - list of keys able to run delivery\n\n    /**\n     * Display a permanent message\n     * @param {String} level - in supported feedbacks' levels\n     * @param {String} content - the message to display\n     */\n    const displayPermanentMessage = (level, content) => {\n        if(level && content){\n            feedback($('.permanent-feedback'))[level](content, {\n                timeout : -1,\n                popup : false\n            });\n        }\n    };\n\n    /**\n     * Extract standard LTI error parameters from query string\n     * @returns {Object} LTI error parameters\n     */\n    const getLTIErrorParameters = () => {\n        const { searchParams } = new URL(window.location.href);\n\n        return ['lti_errormsg', 'lti_errorlog'].reduce((params, paramName) => {\n            if (searchParams.has(paramName)) {\n                params[paramName] = searchParams.get(paramName);\n            }\n            return params;\n        }, {});\n    };\n\n    /**\n     * The DeliveryServer/index controller\n     */\n    return {\n\n        /**\n         * Controller entry point\n         * @param {Object} [parameters] - controller's data\n         * @param {Object} [parameters.messages] - message data to display\n         */\n        start(parameters){\n            let deliveryStarted = false;\n\n            /**\n             * Run/open the given delivery\n             * @param {String} url - the delivery URL\n             */\n            const runDelivery = function runDelivery (url) {\n                if(_.isString(url) && !_.isEmpty(url)){\n                    deliveryStarted = true;\n                    loadingBar.start();\n                    window.location.href = url;\n                }\n            };\n\n            /**\n             * improve UI to support rtl languages\n             */\n            const supportRTL = function supportRTL () {\n                // adding attr for RTL languages\n                $('.delivery-scope').attr({dir: locale.getLanguageDirection(context.locale)});\n            };\n\n            const config = module.config();\n\n            // display as feedbacks any messages in parameters\n            if (parameters && parameters.messages) {\n                _.forEach(parameters.messages, message => {\n                    displayPermanentMessage(message.level, message.content);\n                });\n            }\n\n            // display as feedbacks any LTI error messages from query string\n            const { lti_errormsg: ltiErrorMsg, lti_errorlog: ltiErrorLog } = getLTIErrorParameters();\n\n            if (ltiErrorMsg) {\n                displayPermanentMessage('error', ltiErrorMsg.length ? ltiErrorMsg : __('An error occurred!'));\n            };\n            if (ltiErrorLog) {\n                logger.error(ltiErrorLog);\n            };\n\n            const launchDelivery = function (e) {\n                const $elt = $(e.currentTarget);\n\n                e.preventDefault();\n                e.stopPropagation();\n\n                if(!deliveryStarted && !$elt.hasClass('disabled')){\n                    runDelivery($elt.data().launch_url);\n                }\n            };\n\n            supportRTL();\n            $('.entry-point').on('click', launchDelivery);\n            $('.entry-point').on('keyup', (e) => {\n                if(accessibilityLaunchKeyCodes.includes(e.which)) {\n                    launchDelivery(e);\n                }\n            });\n\n            // dispatch any extra registered routes\n            if (config && _.isArray(config.extraRoutes) && config.extraRoutes.length) {\n                router.dispatch(config.extraRoutes);\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoDelivery/controller/routes',[],function(){\n    'use strict';\n\n    return {\n    };\n});\n\n","\ndefine('tpl!taoDelivery/tpl/fullscreen-modal-feedback', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"(\";\n  if (helper = helpers.launchButton) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.launchButton); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \")\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n            <button class=\\\"btn-info small enter-full-screen\\\" type=\\\"button\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Enter full screen\", options) : helperMissing.call(depth0, \"__\", \"Enter full screen\", options)))\n    + \"</button>\\n            \";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n            <button class=\\\"btn-info small close-full-screen-prompt\\\" type=\\\"button\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close this prompt\", options) : helperMissing.call(depth0, \"__\", \"Close this prompt\", options)))\n    + \"</button>\\n            \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"modal-feedback modal full-screen-modal\\\">\\n    <div class=\\\"modal-body clearfix\\\">\\n        <p class=\\\"message\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This test needs to be taken in full screen mode\", options) : helperMissing.call(depth0, \"__\", \"This test needs to be taken in full screen mode\", options)))\n    + \"\\n            \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.fsSupported), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </p>\\n        <div class=\\\"rgt\\\">\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.fsSupported), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n *\n * @author dieter <dieter@taotesting.com>\n */\ndefine('taoDelivery/controller/runtime/service/fullScreen',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/feedback',\n    'ui/modal',\n    'tpl!taoDelivery/tpl/fullscreen-modal-feedback'\n], function ($, _, __, feedback, modal, dialogTpl) {\n    'use strict';\n\n    var $dialog;\n    var $body;\n    var d = document;\n    var dElem = d.documentElement;\n\n    var fs = {\n        changeInterval: null,\n\n        isSupported: !!(d.exitFullscreen ||\n                        d.msExitFullscreen ||\n                        d.mozCancelFullScreen ||\n                        d.webkitExitFullscreen),\n\n        requestFullscreen: dElem.requestFullscreen ||\n                    dElem.msRequestFullscreen ||\n                    dElem.mozRequestFullScreen ||\n                    function() {\n                        dElem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                    },\n\n                fullscreenchange: (function() {\n                    var prefixes = ['', 'ms', 'moz', 'webkit'],\n                        i = prefixes.length;\n                    while(i--) {\n                        if('on' + prefixes[i] + 'fullscreenchange' in dElem) {\n                            return prefixes[i] + 'fullscreenchange';\n                        }\n                    }\n                    return 'myfullscreenchange';\n                }()),\n\n        fullScreen: function() {\n            return !!(d.fullscreenElement || d.mozFullScreen || d.webkitIsFullScreen ||\n                        (screen.availHeight || screen.height - 30) <= window.innerHeight);\n        },\n\n        // on older browsers wait for a full screen change to happen\n        // and fire the change event manually\n        awaitFsChange : function() {\n            var event = d.createEvent('Event');\n            event.initEvent(fs.fullscreenchange, true, true);\n            clearInterval(fs.changeInterval);\n            fs.changeInterval = setInterval(function() {\n                if(!fs.fullScreen()) {\n                    d.dispatchEvent(event);\n                }\n            }, 2000);\n        }\n    };\n\n    /**\n     * React to user input on the prompt which is either\n     * key press or click on the button\n     *\n     * @param evt\n     */\n    var handleUserInput = function handleUserInput (evt) {\n\n        // full screen needs to be initiated by pressing\n        // F11 (Windows/Linux) or Ctrl+Cmd+F (Mac)\n        if(!fs.isSupported) {\n            $dialog.modal('close');\n            return;\n        }\n\n        // accept 'enter' as only valid key stroke\n        if(evt.type === 'keydown' && (evt.keyCode || evt.which) !== 13) {\n            return;\n        }\n\n        // in all other cases either 'enter' has been hit or the enter button has been clicked\n        fs.requestFullscreen.call(dElem);\n        dElem.className += ' fullscreen';\n        $dialog.modal('close');\n    };\n\n    /**\n     * Triggers a resize\n     */\n    var triggerResize = (function() {\n        return _.throttle(function() {\n            var frame = document.getElementById('iframeDeliveryExec');\n            var frameWindow = frame && frame.contentWindow;\n            var frame$ = frameWindow && frameWindow.$;\n            var $win = frame$ && frame$(frameWindow) || $(window);\n            $win.trigger('resize');\n        }, 250);\n    })();\n\n    /**\n     * Initialize full screen\n     */\n    var init = function init() {\n\n        $body = $(document.body);\n\n        // listen either to the native or the change event created in the observer above\n        document.addEventListener(fs.fullscreenchange, function() {\n            if(!fs.fullScreen()) {\n                dElem.className = dElem.className.replace(/\\bfullscreen\\b/, '');\n                $dialog.modal('open');\n            } else {\n                triggerResize();\n            }\n        });\n        if (!fs.isSupported) {\n            fs.awaitFsChange();\n        }\n\n        modal($body);\n        $dialog = $(dialogTpl({\n            fsSupported: fs.isSupported,\n            // while this is vague chances that any Mac browser gets here are very little\n            launchButton: navigator.platform.toLowerCase().indexOf('Mac') === 0 ? 'Ctrl+⌘+F' : 'F11'\n        }));\n\n        $dialog[0].querySelector('button').addEventListener('click', function(e) {\n            handleUserInput(e);\n        });\n\n        document.addEventListener('keydown', function(e) {\n            if(!fs.fullScreen()) {\n                handleUserInput(e);\n            }\n        });\n\n        $dialog.on('opened.modal', function() {\n            clearInterval(fs.changeInterval);\n        });\n\n        $dialog.on('closed.modal', function() {\n            if (!fs.isSupported) {\n                fs.awaitFsChange();\n                triggerResize();\n            }\n        });\n\n        $body.append($dialog);\n        \n        $dialog.modal({\n            width: 500,\n            animate: false,\n            disableClosing: true,\n            startClosed: true\n        });\n\n        // Note that when a page is on full screen already on load (after F5 normally)\n        // fullscreenElement and therefor fs.fullScreen() will report the wrong value!\n        if(false === ((screen.availHeight || screen.height - 30) <= window.innerHeight)) {\n            $dialog.modal('open');\n        }\n    };\n\n    /**\n     * @exports\n     */\n    return {\n        init: init\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2013 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n *\n */\ndefine('taoDelivery/controller/runtime/service/deliveryExecution',[\n    'lodash',\n    'jquery',\n    'taoDelivery/controller/runtime/service/fullScreen',\n    'layout/loading-bar',\n    'ui/dialog/alert',\n    'layout/logout-event'\n], function(_, $, fullScreen, loadingBar, dialogAlert, logoutEvent){\n    'use strict';\n\n    var $frameContainer,\n        $frame,\n        $headerHeight,\n        $footerHeight;\n\n    /**\n     * Forces a browser repaint\n     * Solution from http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes?answertab=votes#tab-top\n     * @param {jQuery} $target\n     */\n    var forceRepaint = function($target) {\n        var sel = $target[0];\n        if (sel) {\n            sel.style.display = 'none';\n            sel.offsetHeight; // no need to store this anywhere, the reference is enough\n            sel.style.display = '';\n        }\n    };\n\n    function resizeMainFrame() {\n        var height = $(window).outerHeight() - $headerHeight - $footerHeight;\n        $frameContainer.height(height);\n        $frame.height(height);\n        forceRepaint($frameContainer);\n    }\n\n    return {\n        start: function(options){\n            var serviceApi = options.serviceApi;\n\n            if(!!options.deliveryServerConfig.requireFullScreen){\n                fullScreen.init();\n            }\n\n            $frameContainer = $('#outer-delivery-iframe-container');\n            $frame = $frameContainer.find('iframe');\n            $headerHeight = $('body > .content-wrap > header').outerHeight() || 0;\n            $footerHeight = $('body > footer').outerHeight() || 0;\n\n            $(document).on('serviceforbidden', function() {\n                logoutEvent();\n            });\n\n\n            serviceApi.onFinish(function() {\n                window.location = options.finishDeliveryExecution;\n            }).onExit(function() {\n                window.location = options.exitDeliveryExecution;\n            });\n\n            $(document)\n                .on('loading', function(e){\n                    loadingBar.start();\n                })\n                .on('unloading', function(){\n                    setTimeout(function(){\n                        loadingBar.stop();\n                    }, 300);\n                })\n                .on('messagealert', function(e, data) {\n                    if (data) {\n                        dialogAlert(data.message, data.action);\n                    }\n                })\n                .on('shutdown-com', function(){\n                    //use when we want to stop all exchange between frames\n                    $(document).off('heightchange');\n                    $frame.off('load.eventHeight')\n                           .off('load.cors');\n                });\n\n            serviceApi.loadInto($frame.get(0));\n\n            $(window).on('resize', _.throttle(function() {\n                resizeMainFrame();\n            }, 250));\n\n            resizeMainFrame();\n        }\n    };\n});\n\n","\ndefine(\"taoDelivery/loader/taoDelivery.bundle\", function(){});\n"]}